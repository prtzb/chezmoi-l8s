---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 1h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  install:
    remediation:
      retries: 3
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ^69.x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 1h
  values:
    prometheus:
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 50Gi
        retention: 14d
        retentionSize: 45GB
        # Allow discovery of ServiceMonitors/PodMonitors across all namespaces
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        resources:
          requests:
            memory: 2Gi
            cpu: 1000m
          limits:
            memory: 4Gi
            cpu: 2000m

    grafana:
      # Admin password will be loaded from secret
      admin:
        existingSecret: "grafana-admin-secret"
        userKey: admin-user
        passwordKey: admin-password
      persistence:
        enabled: true
        storageClassName: longhorn
        size: 10Gi
      resources:
        requests:
          memory: 512Mi
          cpu: 500m
        limits:
          memory: 1Gi
          cpu: 1000m
      # Ingress will be configured separately in configs/monitoring
      ingress:
        enabled: false

    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 5Gi
        resources:
          requests:
            memory: 256Mi
            cpu: 250m
          limits:
            memory: 512Mi
            cpu: 500m

    # Configure node-exporter to run on all nodes including control plane
    prometheus-node-exporter:
      hostRootFsMount:
        enabled: true
      tolerations:
        - effect: NoSchedule
          operator: Exists

    # Enable metrics for kube-state-metrics
    kube-state-metrics:
      resources:
        requests:
          memory: 128Mi
          cpu: 100m
        limits:
          memory: 256Mi
          cpu: 200m
