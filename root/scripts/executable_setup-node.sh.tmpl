#!/bin/bash
set -euo pipefail

# Node setup script for {{ .data.hostname }}
echo "🔧 Setting up {{ .data.hostname }} for K3s cluster..."

# Update system
echo "📦 Updating system packages..."
sudo apt update && sudo apt upgrade -y

# Install required packages
echo "📦 Installing required packages..."
sudo apt install -y curl wget git netcat-openbsd

# Enable required kernel modules for k3s
echo "⚙️ Configuring kernel modules..."
sudo tee /etc/modules-load.d/k3s.conf <<EOF
br_netfilter
overlay
EOF

sudo modprobe br_netfilter
sudo modprobe overlay

# Configure sysctl for k3s
echo "⚙️ Configuring sysctl parameters..."
sudo tee /etc/sysctl.d/k3s.conf <<EOF
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

# Disable swap (required for k3s)
echo "💾 Disabling swap..."
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Apply network configuration
echo "🌐 Applying network configuration..."
sudo netplan apply

# Set hostname
echo "🏷️ Setting hostname..."
sudo hostnamectl set-hostname {{ .data.hostname }}

# Configure firewall rules (if ufw is enabled)
if sudo ufw status | grep -q "Status: active"; then
    echo "🔥 Configuring firewall rules..."
    {{- if .is_control_plane }}
    # Control plane ports
    sudo ufw allow 6443/tcp  # Kubernetes API
    sudo ufw allow 2379:2380/tcp  # etcd
    sudo ufw allow 10250/tcp # kubelet
    sudo ufw allow 10259/tcp # kube-scheduler
    sudo ufw allow 10257/tcp # kube-controller-manager
    sudo ufw allow 8472/udp  # Flannel VXLAN
    sudo ufw allow 51820/udp # Flannel Wireguard
    sudo ufw allow 51821/udp # Flannel Wireguard IPv6
    # HAProxy stats
    sudo ufw allow 8404/tcp
    {{- end }}
    {{- if .is_worker }}
    # Worker ports
    sudo ufw allow 10250/tcp # kubelet
    sudo ufw allow 8472/udp  # Flannel VXLAN
    sudo ufw allow 51820/udp # Flannel Wireguard
    sudo ufw allow 51821/udp # Flannel Wireguard IPv6
    {{- end }}
    # SSH and cluster internal communication
    sudo ufw allow 22/tcp
    sudo ufw allow from 10.0.1.0/24
fi

echo "✅ Node {{ .data.hostname }} setup completed!"
echo ""
echo "🚀 Next steps:"
{{- if .is_bootstrap }}
echo "1. Run: ./scripts/bootstrap-cluster.sh"
{{- else if .is_control_plane }}
echo "1. Set K3S_TOKEN environment variable"
echo "2. Run: ./scripts/join-control-plane.sh"
{{- else }}
echo "1. Set K3S_TOKEN environment variable"
echo "2. Run: ./scripts/join-worker.sh"
{{- end }}
echo ""
echo "💡 Remember to reboot if kernel modules were loaded for the first time"