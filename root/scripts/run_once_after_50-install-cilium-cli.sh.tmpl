#!/bin/bash
set -euo pipefail

# Install Cilium CLI on {{ .hostname }}
echo "Installing Cilium CLI..."

# Detect architecture
ARCH=$(uname -m)
case $ARCH in
    x86_64) CLI_ARCH=amd64;;
    aarch64) CLI_ARCH=arm64;;
    *) echo "Unsupported architecture: $ARCH"; exit 1;;
esac

# Get latest Cilium CLI version
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)

# Download and install Cilium CLI
CLI_URL="https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz"
echo "Downloading Cilium CLI ${CILIUM_CLI_VERSION} for ${CLI_ARCH}..."

curl -L --fail --remote-name-all ${CLI_URL}{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}

# Verify installation
cilium version --client

echo "Cilium CLI installed successfully on {{ .hostname }}"

{{- if .is_bootstrap }}
# Wait for Cilium to be ready (only on bootstrap node)
echo "Waiting for Cilium to be ready..."
cilium status --wait --wait-duration=5m

# Enable Hubble UI port-forward service (optional)
echo "Cilium status:"
cilium status

echo "To access Hubble UI, run: cilium hubble ui"
{{- end }}